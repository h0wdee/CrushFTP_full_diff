/*
 * Decompiled with CFR 0.152.
 */
package com.hierynomus.ntlm.messages;

import com.hierynomus.protocol.commons.EnumWithValue;

public enum NtlmNegotiateFlag implements EnumWithValue<NtlmNegotiateFlag>
{
    NTLMSSP_NEGOTIATE_56(0x80000000L),
    NTLMSSP_NEGOTIATE_KEY_EXCH(0x40000000L),
    NTLMSSP_NEGOTIATE_128(0x20000000L),
    NTLMSSP_NEGOTIATE_VERSION(0x2000000L),
    NTLMSSP_NEGOTIATE_TARGET_INFO(0x800000L),
    NTLMSSP_REQUEST_NON_NT_SESSION_KEY(0x400000L),
    NTLMSSP_NEGOTIATE_IDENTIFY(0x100000L),
    NTLMSSP_NEGOTIATE_EXTENDED_SESSIONSECURITY(524288L),
    NTLMSSP_TARGET_TYPE_SERVER(131072L),
    NTLMSSP_TARGET_TYPE_DOMAIN(65536L),
    NTLMSSP_NEGOTIATE_ALWAYS_SIGN(32768L),
    NTLMSSP_NEGOTIATE_OEM_WORKSTATION_SUPPLIED(8192L),
    NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED(4096L),
    ANONYMOUS(2048L),
    NTLMSSP_NEGOTIATE_NTLM(512L),
    NTLMSSP_NEGOTIATE_LM_KEY(128L),
    NTLMSSP_NEGOTIATE_DATAGRAM(64L),
    NTLMSSP_NEGOTIATE_SEAL(32L),
    NTLMSSP_NEGOTIATE_SIGN(16L),
    NTLMSSP_REQUEST_TARGET(4L),
    NTLM_NEGOTIATE_OEM(2L),
    NTLMSSP_NEGOTIATE_UNICODE(1L);

    private long value;

    private NtlmNegotiateFlag(long value) {
        this.value = value;
    }

    @Override
    public long getValue() {
        return this.value;
    }
}

