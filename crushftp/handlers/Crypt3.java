/*
 * Decompiled with CFR 0.152.
 */
package crushftp.handlers;

public class Crypt3 {
    private static final int ITERATIONS = 16;
    private static final int[] con_salt;
    private static final boolean[] shifts2;
    private static final int[][] skb;
    private static final int[][] SPtrans;
    private static final int[] cov_2char;

    static {
        int[] nArray = new int[128];
        nArray[47] = 1;
        nArray[48] = 2;
        nArray[49] = 3;
        nArray[50] = 4;
        nArray[51] = 5;
        nArray[52] = 6;
        nArray[53] = 7;
        nArray[54] = 8;
        nArray[55] = 9;
        nArray[56] = 10;
        nArray[57] = 11;
        nArray[58] = 5;
        nArray[59] = 6;
        nArray[60] = 7;
        nArray[61] = 8;
        nArray[62] = 9;
        nArray[63] = 10;
        nArray[64] = 11;
        nArray[65] = 12;
        nArray[66] = 13;
        nArray[67] = 14;
        nArray[68] = 15;
        nArray[69] = 16;
        nArray[70] = 17;
        nArray[71] = 18;
        nArray[72] = 19;
        nArray[73] = 20;
        nArray[74] = 21;
        nArray[75] = 22;
        nArray[76] = 23;
        nArray[77] = 24;
        nArray[78] = 25;
        nArray[79] = 26;
        nArray[80] = 27;
        nArray[81] = 28;
        nArray[82] = 29;
        nArray[83] = 30;
        nArray[84] = 31;
        nArray[85] = 32;
        nArray[86] = 33;
        nArray[87] = 34;
        nArray[88] = 35;
        nArray[89] = 36;
        nArray[90] = 37;
        nArray[91] = 32;
        nArray[92] = 33;
        nArray[93] = 34;
        nArray[94] = 35;
        nArray[95] = 36;
        nArray[96] = 37;
        nArray[97] = 38;
        nArray[98] = 39;
        nArray[99] = 40;
        nArray[100] = 41;
        nArray[101] = 42;
        nArray[102] = 43;
        nArray[103] = 44;
        nArray[104] = 45;
        nArray[105] = 46;
        nArray[106] = 47;
        nArray[107] = 48;
        nArray[108] = 49;
        nArray[109] = 50;
        nArray[110] = 51;
        nArray[111] = 52;
        nArray[112] = 53;
        nArray[113] = 54;
        nArray[114] = 55;
        nArray[115] = 56;
        nArray[116] = 57;
        nArray[117] = 58;
        nArray[118] = 59;
        nArray[119] = 60;
        nArray[120] = 61;
        nArray[121] = 62;
        nArray[122] = 63;
        con_salt = nArray;
        boolean[] blArray = new boolean[16];
        blArray[2] = true;
        blArray[3] = true;
        blArray[4] = true;
        blArray[5] = true;
        blArray[6] = true;
        blArray[7] = true;
        blArray[9] = true;
        blArray[10] = true;
        blArray[11] = true;
        blArray[12] = true;
        blArray[13] = true;
        blArray[14] = true;
        shifts2 = blArray;
        int[][] nArrayArray = new int[8][];
        int[] nArray2 = new int[64];
        nArray2[1] = 16;
        nArray2[2] = 0x20000000;
        nArray2[3] = 0x20000010;
        nArray2[4] = 65536;
        nArray2[5] = 65552;
        nArray2[6] = 0x20010000;
        nArray2[7] = 0x20010010;
        nArray2[8] = 2048;
        nArray2[9] = 2064;
        nArray2[10] = 0x20000800;
        nArray2[11] = 536872976;
        nArray2[12] = 67584;
        nArray2[13] = 67600;
        nArray2[14] = 536938496;
        nArray2[15] = 536938512;
        nArray2[16] = 32;
        nArray2[17] = 48;
        nArray2[18] = 0x20000020;
        nArray2[19] = 0x20000030;
        nArray2[20] = 65568;
        nArray2[21] = 65584;
        nArray2[22] = 0x20010020;
        nArray2[23] = 536936496;
        nArray2[24] = 2080;
        nArray2[25] = 2096;
        nArray2[26] = 0x20000820;
        nArray2[27] = 536873008;
        nArray2[28] = 67616;
        nArray2[29] = 67632;
        nArray2[30] = 536938528;
        nArray2[31] = 536938544;
        nArray2[32] = 524288;
        nArray2[33] = 524304;
        nArray2[34] = 0x20080000;
        nArray2[35] = 537395216;
        nArray2[36] = 589824;
        nArray2[37] = 589840;
        nArray2[38] = 0x20090000;
        nArray2[39] = 537460752;
        nArray2[40] = 526336;
        nArray2[41] = 526352;
        nArray2[42] = 0x20080800;
        nArray2[43] = 537397264;
        nArray2[44] = 591872;
        nArray2[45] = 591888;
        nArray2[46] = 537462784;
        nArray2[47] = 537462800;
        nArray2[48] = 524320;
        nArray2[49] = 524336;
        nArray2[50] = 0x20080020;
        nArray2[51] = 537395248;
        nArray2[52] = 589856;
        nArray2[53] = 589872;
        nArray2[54] = 0x20090020;
        nArray2[55] = 537460784;
        nArray2[56] = 526368;
        nArray2[57] = 526384;
        nArray2[58] = 0x20080820;
        nArray2[59] = 537397296;
        nArray2[60] = 591904;
        nArray2[61] = 591920;
        nArray2[62] = 537462816;
        nArray2[63] = 537462832;
        nArrayArray[0] = nArray2;
        int[] nArray3 = new int[64];
        nArray3[1] = 0x2000000;
        nArray3[2] = 8192;
        nArray3[3] = 0x2002000;
        nArray3[4] = 0x200000;
        nArray3[5] = 0x2200000;
        nArray3[6] = 0x202000;
        nArray3[7] = 0x2202000;
        nArray3[8] = 4;
        nArray3[9] = 0x2000004;
        nArray3[10] = 8196;
        nArray3[11] = 0x2002004;
        nArray3[12] = 0x200004;
        nArray3[13] = 0x2200004;
        nArray3[14] = 0x202004;
        nArray3[15] = 0x2202004;
        nArray3[16] = 1024;
        nArray3[17] = 0x2000400;
        nArray3[18] = 9216;
        nArray3[19] = 0x2002400;
        nArray3[20] = 0x200400;
        nArray3[21] = 0x2200400;
        nArray3[22] = 0x202400;
        nArray3[23] = 0x2202400;
        nArray3[24] = 1028;
        nArray3[25] = 0x2000404;
        nArray3[26] = 9220;
        nArray3[27] = 0x2002404;
        nArray3[28] = 0x200404;
        nArray3[29] = 0x2200404;
        nArray3[30] = 0x202404;
        nArray3[31] = 0x2202404;
        nArray3[32] = 0x10000000;
        nArray3[33] = 0x12000000;
        nArray3[34] = 0x10002000;
        nArray3[35] = 0x12002000;
        nArray3[36] = 0x10200000;
        nArray3[37] = 0x12200000;
        nArray3[38] = 0x10202000;
        nArray3[39] = 0x12202000;
        nArray3[40] = 0x10000004;
        nArray3[41] = 301989892;
        nArray3[42] = 268443652;
        nArray3[43] = 301998084;
        nArray3[44] = 270532612;
        nArray3[45] = 304087044;
        nArray3[46] = 270540804;
        nArray3[47] = 304095236;
        nArray3[48] = 0x10000400;
        nArray3[49] = 301990912;
        nArray3[50] = 268444672;
        nArray3[51] = 301999104;
        nArray3[52] = 270533632;
        nArray3[53] = 304088064;
        nArray3[54] = 270541824;
        nArray3[55] = 304096256;
        nArray3[56] = 0x10000404;
        nArray3[57] = 301990916;
        nArray3[58] = 268444676;
        nArray3[59] = 301999108;
        nArray3[60] = 270533636;
        nArray3[61] = 304088068;
        nArray3[62] = 270541828;
        nArray3[63] = 304096260;
        nArrayArray[1] = nArray3;
        int[] nArray4 = new int[64];
        nArray4[1] = 1;
        nArray4[2] = 262144;
        nArray4[3] = 262145;
        nArray4[4] = 0x1000000;
        nArray4[5] = 0x1000001;
        nArray4[6] = 0x1040000;
        nArray4[7] = 0x1040001;
        nArray4[8] = 2;
        nArray4[9] = 3;
        nArray4[10] = 262146;
        nArray4[11] = 262147;
        nArray4[12] = 0x1000002;
        nArray4[13] = 0x1000003;
        nArray4[14] = 17039362;
        nArray4[15] = 17039363;
        nArray4[16] = 512;
        nArray4[17] = 513;
        nArray4[18] = 262656;
        nArray4[19] = 262657;
        nArray4[20] = 0x1000200;
        nArray4[21] = 0x1000201;
        nArray4[22] = 17039872;
        nArray4[23] = 17039873;
        nArray4[24] = 514;
        nArray4[25] = 515;
        nArray4[26] = 262658;
        nArray4[27] = 262659;
        nArray4[28] = 0x1000202;
        nArray4[29] = 16777731;
        nArray4[30] = 17039874;
        nArray4[31] = 17039875;
        nArray4[32] = 0x8000000;
        nArray4[33] = 0x8000001;
        nArray4[34] = 0x8040000;
        nArray4[35] = 134479873;
        nArray4[36] = 0x9000000;
        nArray4[37] = 0x9000001;
        nArray4[38] = 0x9040000;
        nArray4[39] = 151257089;
        nArray4[40] = 0x8000002;
        nArray4[41] = 0x8000003;
        nArray4[42] = 134479874;
        nArray4[43] = 134479875;
        nArray4[44] = 0x9000002;
        nArray4[45] = 0x9000003;
        nArray4[46] = 151257090;
        nArray4[47] = 151257091;
        nArray4[48] = 0x8000200;
        nArray4[49] = 134218241;
        nArray4[50] = 134480384;
        nArray4[51] = 134480385;
        nArray4[52] = 0x9000200;
        nArray4[53] = 150995457;
        nArray4[54] = 151257600;
        nArray4[55] = 151257601;
        nArray4[56] = 0x8000202;
        nArray4[57] = 134218243;
        nArray4[58] = 134480386;
        nArray4[59] = 134480387;
        nArray4[60] = 0x9000202;
        nArray4[61] = 150995459;
        nArray4[62] = 151257602;
        nArray4[63] = 151257603;
        nArrayArray[2] = nArray4;
        int[] nArray5 = new int[64];
        nArray5[1] = 0x100000;
        nArray5[2] = 256;
        nArray5[3] = 0x100100;
        nArray5[4] = 8;
        nArray5[5] = 0x100008;
        nArray5[6] = 264;
        nArray5[7] = 0x100108;
        nArray5[8] = 4096;
        nArray5[9] = 0x101000;
        nArray5[10] = 4352;
        nArray5[11] = 0x101100;
        nArray5[12] = 4104;
        nArray5[13] = 0x101008;
        nArray5[14] = 4360;
        nArray5[15] = 0x101108;
        nArray5[16] = 0x4000000;
        nArray5[17] = 0x4100000;
        nArray5[18] = 0x4000100;
        nArray5[19] = 0x4100100;
        nArray5[20] = 0x4000008;
        nArray5[21] = 68157448;
        nArray5[22] = 67109128;
        nArray5[23] = 68157704;
        nArray5[24] = 0x4001000;
        nArray5[25] = 0x4101000;
        nArray5[26] = 0x4001100;
        nArray5[27] = 0x4101100;
        nArray5[28] = 67112968;
        nArray5[29] = 68161544;
        nArray5[30] = 67113224;
        nArray5[31] = 68161800;
        nArray5[32] = 131072;
        nArray5[33] = 0x120000;
        nArray5[34] = 131328;
        nArray5[35] = 0x120100;
        nArray5[36] = 131080;
        nArray5[37] = 1179656;
        nArray5[38] = 131336;
        nArray5[39] = 1179912;
        nArray5[40] = 135168;
        nArray5[41] = 0x121000;
        nArray5[42] = 135424;
        nArray5[43] = 0x121100;
        nArray5[44] = 135176;
        nArray5[45] = 1183752;
        nArray5[46] = 135432;
        nArray5[47] = 1184008;
        nArray5[48] = 0x4020000;
        nArray5[49] = 68288512;
        nArray5[50] = 67240192;
        nArray5[51] = 68288768;
        nArray5[52] = 67239944;
        nArray5[53] = 68288520;
        nArray5[54] = 67240200;
        nArray5[55] = 68288776;
        nArray5[56] = 67244032;
        nArray5[57] = 68292608;
        nArray5[58] = 67244288;
        nArray5[59] = 68292864;
        nArray5[60] = 67244040;
        nArray5[61] = 68292616;
        nArray5[62] = 67244296;
        nArray5[63] = 68292872;
        nArrayArray[3] = nArray5;
        int[] nArray6 = new int[64];
        nArray6[1] = 0x10000000;
        nArray6[2] = 65536;
        nArray6[3] = 0x10010000;
        nArray6[4] = 4;
        nArray6[5] = 0x10000004;
        nArray6[6] = 65540;
        nArray6[7] = 0x10010004;
        nArray6[8] = 0x20000000;
        nArray6[9] = 0x30000000;
        nArray6[10] = 0x20010000;
        nArray6[11] = 0x30010000;
        nArray6[12] = 0x20000004;
        nArray6[13] = 0x30000004;
        nArray6[14] = 536936452;
        nArray6[15] = 805371908;
        nArray6[16] = 0x100000;
        nArray6[17] = 0x10100000;
        nArray6[18] = 0x110000;
        nArray6[19] = 0x10110000;
        nArray6[20] = 0x100004;
        nArray6[21] = 0x10100004;
        nArray6[22] = 0x110004;
        nArray6[23] = 0x10110004;
        nArray6[24] = 0x20100000;
        nArray6[25] = 0x30100000;
        nArray6[26] = 0x20110000;
        nArray6[27] = 0x30110000;
        nArray6[28] = 537919492;
        nArray6[29] = 806354948;
        nArray6[30] = 537985028;
        nArray6[31] = 806420484;
        nArray6[32] = 4096;
        nArray6[33] = 0x10001000;
        nArray6[34] = 69632;
        nArray6[35] = 0x10011000;
        nArray6[36] = 4100;
        nArray6[37] = 0x10001004;
        nArray6[38] = 69636;
        nArray6[39] = 0x10011004;
        nArray6[40] = 0x20001000;
        nArray6[41] = 0x30001000;
        nArray6[42] = 0x20011000;
        nArray6[43] = 0x30011000;
        nArray6[44] = 536875012;
        nArray6[45] = 805310468;
        nArray6[46] = 536940548;
        nArray6[47] = 805376004;
        nArray6[48] = 0x101000;
        nArray6[49] = 0x10101000;
        nArray6[50] = 0x111000;
        nArray6[51] = 0x10111000;
        nArray6[52] = 0x101004;
        nArray6[53] = 0x10101004;
        nArray6[54] = 0x111004;
        nArray6[55] = 0x10111004;
        nArray6[56] = 0x20101000;
        nArray6[57] = 0x30101000;
        nArray6[58] = 0x20111000;
        nArray6[59] = 0x30111000;
        nArray6[60] = 537923588;
        nArray6[61] = 806359044;
        nArray6[62] = 537989124;
        nArray6[63] = 806424580;
        nArrayArray[4] = nArray6;
        int[] nArray7 = new int[64];
        nArray7[1] = 0x8000000;
        nArray7[2] = 8;
        nArray7[3] = 0x8000008;
        nArray7[4] = 1024;
        nArray7[5] = 0x8000400;
        nArray7[6] = 1032;
        nArray7[7] = 0x8000408;
        nArray7[8] = 131072;
        nArray7[9] = 0x8020000;
        nArray7[10] = 131080;
        nArray7[11] = 0x8020008;
        nArray7[12] = 132096;
        nArray7[13] = 134349824;
        nArray7[14] = 132104;
        nArray7[15] = 134349832;
        nArray7[16] = 1;
        nArray7[17] = 0x8000001;
        nArray7[18] = 9;
        nArray7[19] = 0x8000009;
        nArray7[20] = 1025;
        nArray7[21] = 134218753;
        nArray7[22] = 1033;
        nArray7[23] = 134218761;
        nArray7[24] = 131073;
        nArray7[25] = 134348801;
        nArray7[26] = 131081;
        nArray7[27] = 134348809;
        nArray7[28] = 132097;
        nArray7[29] = 134349825;
        nArray7[30] = 132105;
        nArray7[31] = 134349833;
        nArray7[32] = 0x2000000;
        nArray7[33] = 0xA000000;
        nArray7[34] = 0x2000008;
        nArray7[35] = 0xA000008;
        nArray7[36] = 0x2000400;
        nArray7[37] = 0xA000400;
        nArray7[38] = 33555464;
        nArray7[39] = 167773192;
        nArray7[40] = 0x2020000;
        nArray7[41] = 0xA020000;
        nArray7[42] = 0x2020008;
        nArray7[43] = 167903240;
        nArray7[44] = 0x2020400;
        nArray7[45] = 167904256;
        nArray7[46] = 33686536;
        nArray7[47] = 167904264;
        nArray7[48] = 0x2000001;
        nArray7[49] = 0xA000001;
        nArray7[50] = 0x2000009;
        nArray7[51] = 0xA000009;
        nArray7[52] = 33555457;
        nArray7[53] = 167773185;
        nArray7[54] = 33555465;
        nArray7[55] = 167773193;
        nArray7[56] = 0x2020001;
        nArray7[57] = 167903233;
        nArray7[58] = 0x2020009;
        nArray7[59] = 167903241;
        nArray7[60] = 33686529;
        nArray7[61] = 167904257;
        nArray7[62] = 33686537;
        nArray7[63] = 167904265;
        nArrayArray[5] = nArray7;
        int[] nArray8 = new int[64];
        nArray8[1] = 256;
        nArray8[2] = 524288;
        nArray8[3] = 524544;
        nArray8[4] = 0x1000000;
        nArray8[5] = 0x1000100;
        nArray8[6] = 0x1080000;
        nArray8[7] = 0x1080100;
        nArray8[8] = 16;
        nArray8[9] = 272;
        nArray8[10] = 524304;
        nArray8[11] = 524560;
        nArray8[12] = 0x1000010;
        nArray8[13] = 0x1000110;
        nArray8[14] = 0x1080010;
        nArray8[15] = 0x1080110;
        nArray8[16] = 0x200000;
        nArray8[17] = 0x200100;
        nArray8[18] = 0x280000;
        nArray8[19] = 2621696;
        nArray8[20] = 0x1200000;
        nArray8[21] = 0x1200100;
        nArray8[22] = 19398656;
        nArray8[23] = 19398912;
        nArray8[24] = 0x200010;
        nArray8[25] = 0x200110;
        nArray8[26] = 2621456;
        nArray8[27] = 2621712;
        nArray8[28] = 0x1200010;
        nArray8[29] = 0x1200110;
        nArray8[30] = 19398672;
        nArray8[31] = 19398928;
        nArray8[32] = 512;
        nArray8[33] = 768;
        nArray8[34] = 524800;
        nArray8[35] = 525056;
        nArray8[36] = 0x1000200;
        nArray8[37] = 0x1000300;
        nArray8[38] = 17302016;
        nArray8[39] = 17302272;
        nArray8[40] = 528;
        nArray8[41] = 784;
        nArray8[42] = 524816;
        nArray8[43] = 525072;
        nArray8[44] = 0x1000210;
        nArray8[45] = 0x1000310;
        nArray8[46] = 17302032;
        nArray8[47] = 17302288;
        nArray8[48] = 0x200200;
        nArray8[49] = 0x200300;
        nArray8[50] = 0x280200;
        nArray8[51] = 2622208;
        nArray8[52] = 0x1200200;
        nArray8[53] = 18875136;
        nArray8[54] = 19399168;
        nArray8[55] = 19399424;
        nArray8[56] = 0x200210;
        nArray8[57] = 2097936;
        nArray8[58] = 2621968;
        nArray8[59] = 2622224;
        nArray8[60] = 0x1200210;
        nArray8[61] = 18875152;
        nArray8[62] = 19399184;
        nArray8[63] = 19399440;
        nArrayArray[6] = nArray8;
        int[] nArray9 = new int[64];
        nArray9[1] = 0x4000000;
        nArray9[2] = 262144;
        nArray9[3] = 0x4040000;
        nArray9[4] = 2;
        nArray9[5] = 0x4000002;
        nArray9[6] = 262146;
        nArray9[7] = 0x4040002;
        nArray9[8] = 8192;
        nArray9[9] = 0x4002000;
        nArray9[10] = 270336;
        nArray9[11] = 0x4042000;
        nArray9[12] = 8194;
        nArray9[13] = 0x4002002;
        nArray9[14] = 270338;
        nArray9[15] = 0x4042002;
        nArray9[16] = 32;
        nArray9[17] = 0x4000020;
        nArray9[18] = 262176;
        nArray9[19] = 0x4040020;
        nArray9[20] = 34;
        nArray9[21] = 0x4000022;
        nArray9[22] = 262178;
        nArray9[23] = 0x4040022;
        nArray9[24] = 8224;
        nArray9[25] = 0x4002020;
        nArray9[26] = 270368;
        nArray9[27] = 0x4042020;
        nArray9[28] = 8226;
        nArray9[29] = 0x4002022;
        nArray9[30] = 270370;
        nArray9[31] = 0x4042022;
        nArray9[32] = 2048;
        nArray9[33] = 0x4000800;
        nArray9[34] = 264192;
        nArray9[35] = 0x4040800;
        nArray9[36] = 2050;
        nArray9[37] = 67110914;
        nArray9[38] = 264194;
        nArray9[39] = 67373058;
        nArray9[40] = 10240;
        nArray9[41] = 67119104;
        nArray9[42] = 272384;
        nArray9[43] = 67381248;
        nArray9[44] = 10242;
        nArray9[45] = 67119106;
        nArray9[46] = 272386;
        nArray9[47] = 67381250;
        nArray9[48] = 2080;
        nArray9[49] = 67110944;
        nArray9[50] = 264224;
        nArray9[51] = 67373088;
        nArray9[52] = 2082;
        nArray9[53] = 67110946;
        nArray9[54] = 264226;
        nArray9[55] = 67373090;
        nArray9[56] = 10272;
        nArray9[57] = 67119136;
        nArray9[58] = 272416;
        nArray9[59] = 67381280;
        nArray9[60] = 10274;
        nArray9[61] = 67119138;
        nArray9[62] = 272418;
        nArray9[63] = 67381282;
        nArrayArray[7] = nArray9;
        skb = nArrayArray;
        int[][] nArrayArray2 = new int[8][];
        int[] nArray10 = new int[64];
        nArray10[0] = 0x820200;
        nArray10[1] = 131072;
        nArray10[2] = -2139095040;
        nArray10[3] = -2138963456;
        nArray10[4] = 0x800000;
        nArray10[5] = -2147352064;
        nArray10[6] = -2147352576;
        nArray10[7] = -2139095040;
        nArray10[8] = -2147352064;
        nArray10[9] = 0x820200;
        nArray10[10] = 0x820000;
        nArray10[11] = -2147483136;
        nArray10[12] = -2139094528;
        nArray10[13] = 0x800000;
        nArray10[15] = -2147352576;
        nArray10[16] = 131072;
        nArray10[17] = Integer.MIN_VALUE;
        nArray10[18] = 0x800200;
        nArray10[19] = 131584;
        nArray10[20] = -2138963456;
        nArray10[21] = 0x820000;
        nArray10[22] = -2147483136;
        nArray10[23] = 0x800200;
        nArray10[24] = Integer.MIN_VALUE;
        nArray10[25] = 512;
        nArray10[26] = 131584;
        nArray10[27] = -2138963968;
        nArray10[28] = 512;
        nArray10[29] = -2139094528;
        nArray10[30] = -2138963968;
        nArray10[33] = -2138963456;
        nArray10[34] = 0x800200;
        nArray10[35] = -2147352576;
        nArray10[36] = 0x820200;
        nArray10[37] = 131072;
        nArray10[38] = -2147483136;
        nArray10[39] = 0x800200;
        nArray10[40] = -2138963968;
        nArray10[41] = 512;
        nArray10[42] = 131584;
        nArray10[43] = -2139095040;
        nArray10[44] = -2147352064;
        nArray10[45] = Integer.MIN_VALUE;
        nArray10[46] = -2139095040;
        nArray10[47] = 0x820000;
        nArray10[48] = -2138963456;
        nArray10[49] = 131584;
        nArray10[50] = 0x820000;
        nArray10[51] = -2139094528;
        nArray10[52] = 0x800000;
        nArray10[53] = -2147483136;
        nArray10[54] = -2147352576;
        nArray10[56] = 131072;
        nArray10[57] = 0x800000;
        nArray10[58] = -2139094528;
        nArray10[59] = 0x820200;
        nArray10[60] = Integer.MIN_VALUE;
        nArray10[61] = -2138963968;
        nArray10[62] = 512;
        nArray10[63] = -2147352064;
        nArrayArray2[0] = nArray10;
        int[] nArray11 = new int[64];
        nArray11[0] = 268705796;
        nArray11[2] = 270336;
        nArray11[3] = 0x10040000;
        nArray11[4] = 0x10000004;
        nArray11[5] = 8196;
        nArray11[6] = 0x10002000;
        nArray11[7] = 270336;
        nArray11[8] = 8192;
        nArray11[9] = 0x10040004;
        nArray11[10] = 4;
        nArray11[11] = 0x10002000;
        nArray11[12] = 262148;
        nArray11[13] = 268705792;
        nArray11[14] = 0x10040000;
        nArray11[15] = 4;
        nArray11[16] = 262144;
        nArray11[17] = 268443652;
        nArray11[18] = 0x10040004;
        nArray11[19] = 8192;
        nArray11[20] = 270340;
        nArray11[21] = 0x10000000;
        nArray11[23] = 262148;
        nArray11[24] = 268443652;
        nArray11[25] = 270340;
        nArray11[26] = 268705792;
        nArray11[27] = 0x10000004;
        nArray11[28] = 0x10000000;
        nArray11[29] = 262144;
        nArray11[30] = 8196;
        nArray11[31] = 268705796;
        nArray11[32] = 262148;
        nArray11[33] = 268705792;
        nArray11[34] = 0x10002000;
        nArray11[35] = 270340;
        nArray11[36] = 268705796;
        nArray11[37] = 262148;
        nArray11[38] = 0x10000004;
        nArray11[40] = 0x10000000;
        nArray11[41] = 8196;
        nArray11[42] = 262144;
        nArray11[43] = 0x10040004;
        nArray11[44] = 8192;
        nArray11[45] = 0x10000000;
        nArray11[46] = 270340;
        nArray11[47] = 268443652;
        nArray11[48] = 268705792;
        nArray11[49] = 8192;
        nArray11[51] = 0x10000004;
        nArray11[52] = 4;
        nArray11[53] = 268705796;
        nArray11[54] = 270336;
        nArray11[55] = 0x10040000;
        nArray11[56] = 0x10040004;
        nArray11[57] = 262144;
        nArray11[58] = 8196;
        nArray11[59] = 0x10002000;
        nArray11[60] = 268443652;
        nArray11[61] = 4;
        nArray11[62] = 0x10040000;
        nArray11[63] = 270336;
        nArrayArray2[1] = nArray11;
        int[] nArray12 = new int[64];
        nArray12[0] = 0x41000000;
        nArray12[1] = 0x1010040;
        nArray12[2] = 64;
        nArray12[3] = 0x41000040;
        nArray12[4] = 0x40010000;
        nArray12[5] = 0x1000000;
        nArray12[6] = 0x41000040;
        nArray12[7] = 65600;
        nArray12[8] = 0x1000040;
        nArray12[9] = 65536;
        nArray12[10] = 0x1010000;
        nArray12[11] = 0x40000000;
        nArray12[12] = 0x41010040;
        nArray12[13] = 0x40000040;
        nArray12[14] = 0x40000000;
        nArray12[15] = 0x41010000;
        nArray12[17] = 0x40010000;
        nArray12[18] = 0x1010040;
        nArray12[19] = 64;
        nArray12[20] = 0x40000040;
        nArray12[21] = 0x41010040;
        nArray12[22] = 65536;
        nArray12[23] = 0x41000000;
        nArray12[24] = 0x41010000;
        nArray12[25] = 0x1000040;
        nArray12[26] = 0x40010040;
        nArray12[27] = 0x1010000;
        nArray12[28] = 65600;
        nArray12[30] = 0x1000000;
        nArray12[31] = 0x40010040;
        nArray12[32] = 0x1010040;
        nArray12[33] = 64;
        nArray12[34] = 0x40000000;
        nArray12[35] = 65536;
        nArray12[36] = 0x40000040;
        nArray12[37] = 0x40010000;
        nArray12[38] = 0x1010000;
        nArray12[39] = 0x41000040;
        nArray12[41] = 0x1010040;
        nArray12[42] = 65600;
        nArray12[43] = 0x41010000;
        nArray12[44] = 0x40010000;
        nArray12[45] = 0x1000000;
        nArray12[46] = 0x41010040;
        nArray12[47] = 0x40000000;
        nArray12[48] = 0x40010040;
        nArray12[49] = 0x41000000;
        nArray12[50] = 0x1000000;
        nArray12[51] = 0x41010040;
        nArray12[52] = 65536;
        nArray12[53] = 0x1000040;
        nArray12[54] = 0x41000040;
        nArray12[55] = 65600;
        nArray12[56] = 0x1000040;
        nArray12[58] = 0x41010000;
        nArray12[59] = 0x40000040;
        nArray12[60] = 0x41000000;
        nArray12[61] = 0x40010040;
        nArray12[62] = 64;
        nArray12[63] = 0x1010000;
        nArrayArray2[2] = nArray12;
        int[] nArray13 = new int[64];
        nArray13[0] = 1049602;
        nArray13[1] = 0x4000400;
        nArray13[2] = 2;
        nArray13[3] = 68158466;
        nArray13[5] = 0x4100000;
        nArray13[6] = 0x4000402;
        nArray13[7] = 0x100002;
        nArray13[8] = 0x4100400;
        nArray13[9] = 0x4000002;
        nArray13[10] = 0x4000000;
        nArray13[11] = 1026;
        nArray13[12] = 0x4000002;
        nArray13[13] = 1049602;
        nArray13[14] = 0x100000;
        nArray13[15] = 0x4000000;
        nArray13[16] = 68157442;
        nArray13[17] = 0x100400;
        nArray13[18] = 1024;
        nArray13[19] = 2;
        nArray13[20] = 0x100400;
        nArray13[21] = 0x4000402;
        nArray13[22] = 0x4100000;
        nArray13[23] = 1024;
        nArray13[24] = 1026;
        nArray13[26] = 0x100002;
        nArray13[27] = 0x4100400;
        nArray13[28] = 0x4000400;
        nArray13[29] = 68157442;
        nArray13[30] = 68158466;
        nArray13[31] = 0x100000;
        nArray13[32] = 68157442;
        nArray13[33] = 1026;
        nArray13[34] = 0x100000;
        nArray13[35] = 0x4000002;
        nArray13[36] = 0x100400;
        nArray13[37] = 0x4000400;
        nArray13[38] = 2;
        nArray13[39] = 0x4100000;
        nArray13[40] = 0x4000402;
        nArray13[42] = 1024;
        nArray13[43] = 0x100002;
        nArray13[45] = 68157442;
        nArray13[46] = 0x4100400;
        nArray13[47] = 1024;
        nArray13[48] = 0x4000000;
        nArray13[49] = 68158466;
        nArray13[50] = 1049602;
        nArray13[51] = 0x100000;
        nArray13[52] = 68158466;
        nArray13[53] = 2;
        nArray13[54] = 0x4000400;
        nArray13[55] = 1049602;
        nArray13[56] = 0x100002;
        nArray13[57] = 0x100400;
        nArray13[58] = 0x4100000;
        nArray13[59] = 0x4000402;
        nArray13[60] = 1026;
        nArray13[61] = 0x4000000;
        nArray13[62] = 0x4000002;
        nArray13[63] = 0x4100400;
        nArrayArray2[3] = nArray13;
        int[] nArray14 = new int[64];
        nArray14[0] = 0x2000000;
        nArray14[1] = 16384;
        nArray14[2] = 256;
        nArray14[3] = 33571080;
        nArray14[4] = 33570824;
        nArray14[5] = 0x2000100;
        nArray14[6] = 16648;
        nArray14[7] = 0x2004000;
        nArray14[8] = 16384;
        nArray14[9] = 8;
        nArray14[10] = 0x2000008;
        nArray14[11] = 16640;
        nArray14[12] = 33554696;
        nArray14[13] = 33570824;
        nArray14[14] = 33571072;
        nArray14[16] = 16640;
        nArray14[17] = 0x2000000;
        nArray14[18] = 16392;
        nArray14[19] = 264;
        nArray14[20] = 0x2000100;
        nArray14[21] = 16648;
        nArray14[23] = 0x2000008;
        nArray14[24] = 8;
        nArray14[25] = 33554696;
        nArray14[26] = 33571080;
        nArray14[27] = 16392;
        nArray14[28] = 0x2004000;
        nArray14[29] = 256;
        nArray14[30] = 264;
        nArray14[31] = 33571072;
        nArray14[32] = 33571072;
        nArray14[33] = 33554696;
        nArray14[34] = 16392;
        nArray14[35] = 0x2004000;
        nArray14[36] = 16384;
        nArray14[37] = 8;
        nArray14[38] = 0x2000008;
        nArray14[39] = 0x2000100;
        nArray14[40] = 0x2000000;
        nArray14[41] = 16640;
        nArray14[42] = 33571080;
        nArray14[44] = 16648;
        nArray14[45] = 0x2000000;
        nArray14[46] = 256;
        nArray14[47] = 16392;
        nArray14[48] = 33554696;
        nArray14[49] = 256;
        nArray14[51] = 33571080;
        nArray14[52] = 33570824;
        nArray14[53] = 33571072;
        nArray14[54] = 264;
        nArray14[55] = 16384;
        nArray14[56] = 16640;
        nArray14[57] = 33570824;
        nArray14[58] = 0x2000100;
        nArray14[59] = 264;
        nArray14[60] = 8;
        nArray14[61] = 16648;
        nArray14[62] = 0x2004000;
        nArray14[63] = 0x2000008;
        nArrayArray2[4] = nArray14;
        int[] nArray15 = new int[64];
        nArray15[0] = 0x20000010;
        nArray15[1] = 524304;
        nArray15[3] = 0x20080800;
        nArray15[4] = 524304;
        nArray15[5] = 2048;
        nArray15[6] = 536872976;
        nArray15[7] = 524288;
        nArray15[8] = 2064;
        nArray15[9] = 537397264;
        nArray15[10] = 526336;
        nArray15[11] = 0x20000000;
        nArray15[12] = 0x20000800;
        nArray15[13] = 0x20000010;
        nArray15[14] = 0x20080000;
        nArray15[15] = 526352;
        nArray15[16] = 524288;
        nArray15[17] = 536872976;
        nArray15[18] = 537395216;
        nArray15[20] = 2048;
        nArray15[21] = 16;
        nArray15[22] = 0x20080800;
        nArray15[23] = 537395216;
        nArray15[24] = 537397264;
        nArray15[25] = 0x20080000;
        nArray15[26] = 0x20000000;
        nArray15[27] = 2064;
        nArray15[28] = 16;
        nArray15[29] = 526336;
        nArray15[30] = 526352;
        nArray15[31] = 0x20000800;
        nArray15[32] = 2064;
        nArray15[33] = 0x20000000;
        nArray15[34] = 0x20000800;
        nArray15[35] = 526352;
        nArray15[36] = 0x20080800;
        nArray15[37] = 524304;
        nArray15[39] = 0x20000800;
        nArray15[40] = 0x20000000;
        nArray15[41] = 2048;
        nArray15[42] = 537395216;
        nArray15[43] = 524288;
        nArray15[44] = 524304;
        nArray15[45] = 537397264;
        nArray15[46] = 526336;
        nArray15[47] = 16;
        nArray15[48] = 537397264;
        nArray15[49] = 526336;
        nArray15[50] = 524288;
        nArray15[51] = 536872976;
        nArray15[52] = 0x20000010;
        nArray15[53] = 0x20080000;
        nArray15[54] = 526352;
        nArray15[56] = 2048;
        nArray15[57] = 0x20000010;
        nArray15[58] = 536872976;
        nArray15[59] = 0x20080800;
        nArray15[60] = 0x20080000;
        nArray15[61] = 2064;
        nArray15[62] = 16;
        nArray15[63] = 537395216;
        nArrayArray2[5] = nArray15;
        int[] nArray16 = new int[64];
        nArray16[0] = 4096;
        nArray16[1] = 128;
        nArray16[2] = 0x400080;
        nArray16[3] = 0x400001;
        nArray16[4] = 4198529;
        nArray16[5] = 4097;
        nArray16[6] = 4224;
        nArray16[8] = 0x400000;
        nArray16[9] = 4194433;
        nArray16[10] = 129;
        nArray16[11] = 0x401000;
        nArray16[12] = 1;
        nArray16[13] = 4198528;
        nArray16[14] = 0x401000;
        nArray16[15] = 129;
        nArray16[16] = 4194433;
        nArray16[17] = 4096;
        nArray16[18] = 4097;
        nArray16[19] = 4198529;
        nArray16[21] = 0x400080;
        nArray16[22] = 0x400001;
        nArray16[23] = 4224;
        nArray16[24] = 0x401001;
        nArray16[25] = 4225;
        nArray16[26] = 4198528;
        nArray16[27] = 1;
        nArray16[28] = 4225;
        nArray16[29] = 0x401001;
        nArray16[30] = 128;
        nArray16[31] = 0x400000;
        nArray16[32] = 4225;
        nArray16[33] = 0x401000;
        nArray16[34] = 0x401001;
        nArray16[35] = 129;
        nArray16[36] = 4096;
        nArray16[37] = 128;
        nArray16[38] = 0x400000;
        nArray16[39] = 0x401001;
        nArray16[40] = 4194433;
        nArray16[41] = 4225;
        nArray16[42] = 4224;
        nArray16[44] = 128;
        nArray16[45] = 0x400001;
        nArray16[46] = 1;
        nArray16[47] = 0x400080;
        nArray16[49] = 4194433;
        nArray16[50] = 0x400080;
        nArray16[51] = 4224;
        nArray16[52] = 129;
        nArray16[53] = 4096;
        nArray16[54] = 4198529;
        nArray16[55] = 0x400000;
        nArray16[56] = 4198528;
        nArray16[57] = 1;
        nArray16[58] = 4097;
        nArray16[59] = 4198529;
        nArray16[60] = 0x400001;
        nArray16[61] = 4198528;
        nArray16[62] = 0x401000;
        nArray16[63] = 4097;
        nArrayArray2[6] = nArray16;
        int[] nArray17 = new int[64];
        nArray17[0] = 0x8200020;
        nArray17[1] = 0x8208000;
        nArray17[2] = 32800;
        nArray17[4] = 0x8008000;
        nArray17[5] = 0x200020;
        nArray17[6] = 0x8200000;
        nArray17[7] = 0x8208020;
        nArray17[8] = 32;
        nArray17[9] = 0x8000000;
        nArray17[10] = 0x208000;
        nArray17[11] = 32800;
        nArray17[12] = 0x208020;
        nArray17[13] = 0x8008020;
        nArray17[14] = 0x8000020;
        nArray17[15] = 0x8200000;
        nArray17[16] = 32768;
        nArray17[17] = 0x208020;
        nArray17[18] = 0x200020;
        nArray17[19] = 0x8008000;
        nArray17[20] = 0x8208020;
        nArray17[21] = 0x8000020;
        nArray17[23] = 0x208000;
        nArray17[24] = 0x8000000;
        nArray17[25] = 0x200000;
        nArray17[26] = 0x8008020;
        nArray17[27] = 0x8200020;
        nArray17[28] = 0x200000;
        nArray17[29] = 32768;
        nArray17[30] = 0x8208000;
        nArray17[31] = 32;
        nArray17[32] = 0x200000;
        nArray17[33] = 32768;
        nArray17[34] = 0x8000020;
        nArray17[35] = 0x8208020;
        nArray17[36] = 32800;
        nArray17[37] = 0x8000000;
        nArray17[39] = 0x208000;
        nArray17[40] = 0x8200020;
        nArray17[41] = 0x8008020;
        nArray17[42] = 0x8008000;
        nArray17[43] = 0x200020;
        nArray17[44] = 0x8208000;
        nArray17[45] = 32;
        nArray17[46] = 0x200020;
        nArray17[47] = 0x8008000;
        nArray17[48] = 0x8208020;
        nArray17[49] = 0x200000;
        nArray17[50] = 0x8200000;
        nArray17[51] = 0x8000020;
        nArray17[52] = 0x208000;
        nArray17[53] = 32800;
        nArray17[54] = 0x8008020;
        nArray17[55] = 0x8200000;
        nArray17[56] = 32;
        nArray17[57] = 0x8208000;
        nArray17[58] = 0x208020;
        nArray17[60] = 0x8000000;
        nArray17[61] = 0x8200020;
        nArray17[62] = 32768;
        nArray17[63] = 0x208020;
        nArrayArray2[7] = nArray17;
        SPtrans = nArrayArray2;
        cov_2char = new int[]{46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122};
    }

    private static final int byteToUnsigned(byte b) {
        int value = b;
        return value >= 0 ? value : value + 256;
    }

    private static int fourBytesToInt(byte[] b, int offset) {
        int value = Crypt3.byteToUnsigned(b[offset++]);
        value |= Crypt3.byteToUnsigned(b[offset++]) << 8;
        value |= Crypt3.byteToUnsigned(b[offset++]) << 16;
        return value |= Crypt3.byteToUnsigned(b[offset++]) << 24;
    }

    private static final void intToFourBytes(int iValue, byte[] b, int offset) {
        b[offset++] = (byte)(iValue & 0xFF);
        b[offset++] = (byte)(iValue >>> 8 & 0xFF);
        b[offset++] = (byte)(iValue >>> 16 & 0xFF);
        b[offset++] = (byte)(iValue >>> 24 & 0xFF);
    }

    private static final void PERM_OP(int a, int b, int n, int m, int[] results) {
        int t = (a >>> n ^ b) & m;
        results[0] = a ^= t << n;
        results[1] = b ^= t;
    }

    private static final int HPERM_OP(int a, int n, int m) {
        int t = (a << 16 - n ^ a) & m;
        a = a ^ t ^ t >>> 16 - n;
        return a;
    }

    private static int[] des_set_key(byte[] key) {
        int[] schedule = new int[32];
        int c = Crypt3.fourBytesToInt(key, 0);
        int d = Crypt3.fourBytesToInt(key, 4);
        int[] results = new int[2];
        Crypt3.PERM_OP(d, c, 4, 0xF0F0F0F, results);
        d = results[0];
        c = results[1];
        c = Crypt3.HPERM_OP(c, -2, -859045888);
        d = Crypt3.HPERM_OP(d, -2, -859045888);
        Crypt3.PERM_OP(d, c, 1, 0x55555555, results);
        d = results[0];
        c = results[1];
        Crypt3.PERM_OP(c, d, 8, 0xFF00FF, results);
        c = results[0];
        d = results[1];
        Crypt3.PERM_OP(d, c, 1, 0x55555555, results);
        d = results[0];
        c = results[1];
        d = (d & 0xFF) << 16 | d & 0xFF00 | (d & 0xFF0000) >>> 16 | (c & 0xF0000000) >>> 4;
        c &= 0xFFFFFFF;
        int j = 0;
        int i = 0;
        while (i < 16) {
            if (shifts2[i]) {
                c = c >>> 2 | c << 26;
                d = d >>> 2 | d << 26;
            } else {
                c = c >>> 1 | c << 27;
                d = d >>> 1 | d << 27;
            }
            int s = skb[0][(c &= 0xFFFFFFF) & 0x3F] | skb[1][c >>> 6 & 3 | c >>> 7 & 0x3C] | skb[2][c >>> 13 & 0xF | c >>> 14 & 0x30] | skb[3][c >>> 20 & 1 | c >>> 21 & 6 | c >>> 22 & 0x38];
            int t = skb[4][(d &= 0xFFFFFFF) & 0x3F] | skb[5][d >>> 7 & 3 | d >>> 8 & 0x3C] | skb[6][d >>> 15 & 0x3F] | skb[7][d >>> 21 & 0xF | d >>> 22 & 0x30];
            schedule[j++] = (t << 16 | s & 0xFFFF) & 0xFFFFFFFF;
            s = s >>> 16 | t & 0xFFFF0000;
            s = s << 4 | s >>> 28;
            schedule[j++] = s & 0xFFFFFFFF;
            ++i;
        }
        return schedule;
    }

    private static final int D_ENCRYPT(int L, int R, int S, int E0, int E1, int[] s) {
        int v = R ^ R >>> 16;
        int u = v & E0;
        u = u ^ u << 16 ^ R ^ s[S];
        int t = (v &= E1) ^ v << 16 ^ R ^ s[S + 1];
        t = t >>> 4 | t << 28;
        return L ^= SPtrans[1][t & 0x3F] | SPtrans[3][t >>> 8 & 0x3F] | SPtrans[5][t >>> 16 & 0x3F] | SPtrans[7][t >>> 24 & 0x3F] | SPtrans[0][u & 0x3F] | SPtrans[2][u >>> 8 & 0x3F] | SPtrans[4][u >>> 16 & 0x3F] | SPtrans[6][u >>> 24 & 0x3F];
    }

    private static final int[] body(int[] schedule, int Eswap0, int Eswap1) {
        int left = 0;
        int right = 0;
        int t = 0;
        int j = 0;
        while (j < 25) {
            int i = 0;
            while (i < 32) {
                left = Crypt3.D_ENCRYPT(left, right, i, Eswap0, Eswap1, schedule);
                right = Crypt3.D_ENCRYPT(right, left, i + 2, Eswap0, Eswap1, schedule);
                i += 4;
            }
            t = left;
            left = right;
            right = t;
            ++j;
        }
        t = right;
        right = left >>> 1 | left << 31;
        left = t >>> 1 | t << 31;
        int[] results = new int[2];
        Crypt3.PERM_OP(right &= 0xFFFFFFFF, left &= 0xFFFFFFFF, 1, 0x55555555, results);
        right = results[0];
        left = results[1];
        Crypt3.PERM_OP(left, right, 8, 0xFF00FF, results);
        left = results[0];
        right = results[1];
        Crypt3.PERM_OP(right, left, 2, 0x33333333, results);
        right = results[0];
        left = results[1];
        Crypt3.PERM_OP(left, right, 16, 65535, results);
        left = results[0];
        right = results[1];
        Crypt3.PERM_OP(right, left, 4, 0xF0F0F0F, results);
        right = results[0];
        left = results[1];
        int[] out = new int[]{left, right};
        return out;
    }

    public static final String crypt(String salt, String original) {
        while (salt.length() < 2) {
            salt = String.valueOf(salt) + "A";
        }
        StringBuffer buffer = new StringBuffer("             ");
        char charZero = salt.charAt(0);
        char charOne = salt.charAt(1);
        buffer.setCharAt(0, charZero);
        buffer.setCharAt(1, charOne);
        int Eswap0 = con_salt[charZero];
        int Eswap1 = con_salt[charOne] << 4;
        byte[] key = new byte[8];
        int i = 0;
        while (i < key.length) {
            key[i] = 0;
            ++i;
        }
        i = 0;
        while (i < key.length && i < original.length()) {
            char iChar = original.charAt(i);
            key[i] = (byte)(iChar << 1);
            ++i;
        }
        int[] schedule = Crypt3.des_set_key(key);
        int[] out = Crypt3.body(schedule, Eswap0, Eswap1);
        byte[] b = new byte[9];
        Crypt3.intToFourBytes(out[0], b, 0);
        Crypt3.intToFourBytes(out[1], b, 4);
        b[8] = 0;
        int i2 = 2;
        int y = 0;
        int u = 128;
        while (i2 < 13) {
            int j = 0;
            int c = 0;
            while (j < 6) {
                c <<= 1;
                if ((b[y] & u) != 0) {
                    c |= 1;
                }
                if ((u >>>= 1) == 0) {
                    ++y;
                    u = 128;
                }
                buffer.setCharAt(i2, (char)cov_2char[c]);
                ++j;
            }
            ++i2;
        }
        return buffer.toString();
    }
}

